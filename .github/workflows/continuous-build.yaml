name: Continuous Build

on:
  push:
  pull_request:
    branches: [main]

jobs:
  build-sync:
    name: Build with sync feature
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
      - uses: actions/checkout@v4
      - name: Cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Build (sync)
        run: cargo build --no-default-features --features sync --verbose
      - name: Build with advanced feature
        run: cargo build --no-default-features --features sync advanced --verbose
        
  build-async:
    name: Build with async feature
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
      - uses: actions/checkout@v4
      - name: Cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Build
        run: cargo build --no-default-features --features async --verbose
      - name: Build with advanced feature
        run: cargo build --no-default-features --features async advanced --verbose


  build-examples:
    name: Build Vendor Inspired examples
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    steps:
      - name: Install FTDI Dependencies (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get install libftdi1 libftdi1-dev -y
      - name: Install FTDI Dependencies (MacOS)
        if: runner.os == 'MacOS'
        run: |
          brew install libftdi
      - uses: actions/checkout@v4
      - name: Cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Build Power Data Object Query
        run: |
         cargo build --examples power_data_object_query --no-default-features --features sync --verbose
      - name: Build Power Data Object Send 
        run: |
         cargo build --examples power_data_object_send --no-default-features --features sync --verbose
      - name: Build Power Data Object Switch 
        run: |
         cargo build --examples power_data_object_switch --no-default-features --features sync --verbose
      - name: Build Startup Configuration
        run: |
         cargo build --examples state_query --no-default-features --features sync --verbose
